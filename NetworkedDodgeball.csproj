<Project Sdk="Godot.NET.Sdk/4.4.1">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RootNamespace>NetworkedDodgeball</RootNamespace>
    <!-- Catch compiler-mismatch issues with the Introspection generator as early as possible -->
    <WarningsAsErrors>CS9057</WarningsAsErrors>
    <!-- Required for some nuget packages to work -->
    <!-- godotengine/godot/issues/42271#issuecomment-751423827 -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- To show generated files -->
    <!-- <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles> -->
    <!--
      <CompilerGeneratedFilesOutputPath>.generated</CompilerGeneratedFilesOutputPath>
    -->
    <!--<DefineConstants>$(DefineConstants);EOS_PLATFORM_WINDOWS_64</DefineConstants>-->
    <!-- If needed, also specify the platform target -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Title>NetworkedDodgeball</Title>
    <Version>1.0.0</Version>
    <Description>NetworkedDodgeball</Description>
    <Copyright>Â© 2024 Jacob Edie</Copyright>
    <Authors>Jacob Edie</Authors>
    <Company>Jacob Edie</Company>
    <!-- Don't include unit tests in release builds. -->
    <DefaultItemExcludes Condition="'$(Configuration)' == 'ExportRelease'">
      $(DefaultItemExcludes);test/**/*
    </DefaultItemExcludes>
    <Configurations>Debug;ExportDebug;ExportRelease;</Configurations>
    <!-- Define supported Runtime Identifiers for CLI/Rider builds -->
  </PropertyGroup>
<!--
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
     Define for EOS Config.cs when building ON Windows
    <DefineConstants>$(DefineConstants);EOS_PLATFORM_WINDOWS_64</DefineConstants>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
-->
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <!-- Define for EOS Config.cs when building ON macOS -->
    <DefineConstants>$(DefineConstants);EOS_PLATFORM_OSX</DefineConstants>
    <!-- Force ARM64 build on M1/M2 Macs -->
    <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
    <PlatformTarget>ARM64</PlatformTarget>
    <!-- Explicitly set macOS as target OS -->
    <OSPlatform>OSX</OSPlatform>
    <TargetOS>osx</TargetOS>
  </PropertyGroup>

  <!-- Windows x64 
  <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'win-x64'">
    <PlatformTarget>x64</PlatformTarget>
    <DefineConstants>$(DefineConstants);EOS_PLATFORM_WINDOWS_64</DefineConstants>
  </PropertyGroup>
-->
  <!-- macOS ARM64 -->
  <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
    <PlatformTarget>ARM64</PlatformTarget>
    <DefineConstants>$(DefineConstants);EOS_PLATFORM_OSX</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(Configuration)' == 'Debug' or '$(Configuration)' == 'ExportDebug' ">
    <!-- Test dependencies go here! -->
    <!-- Dependencies added here will not be included in release builds. -->
    <PackageReference Include="Chickensoft.GoDotTest" Version="1.6.4" />
    <!-- Used to drive test scenes when testing visual code -->
    <PackageReference Include="Chickensoft.GodotTestDriver" Version="3.0.2" />
    <!-- Bring your own assertion library for tests! -->
    <!-- We're using Shouldly for this example, but you can use anything. -->
    <PackageReference Include="Shouldly" Version="4.3.0" />
    <!-- LightMock is a mocking library that works without reflection. -->
    <PackageReference Include="LightMock.Generator" Version="1.2.2" />
    <!-- LightMoq is a Chickensoft package which makes it more like Moq. -->
    <PackageReference Include="LightMoq" Version="0.1.0" />
  </ItemGroup>
  <ItemGroup>
    <!-- Production dependencies go here! -->
    <PackageReference Include="Chickensoft.GameTools" Version="2.0.6" />
    <Compile Include="..\SDK\Source\Core\**\*.cs">
      <Link>SDK\Core\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="..\SDK\Source\Generated\**\*.cs">
      <Link>SDK\Generated\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="..\SDK\Source\Overrides\**\*.cs">
      <Link>SDK\Overrides\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <!-- Include Windows DLL if building ON Windows OR targeting Windows RID -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) Or '$(RuntimeIdentifier)' == 'win-x64'">
    <None Include="..\SDK\Bin\EOSSDK-Win64-Shipping.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>EOSSDK-Win64-Shipping.dll</Link>
    </None>
  </ItemGroup>

  <!-- Include macOS dylib if building ON macOS OR targeting macOS RID -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) Or '$(RuntimeIdentifier)' == 'osx-x64' Or '$(RuntimeIdentifier)' == 'osx-arm64'">
    <None Include="..\SDK\Bin\libEOSSDK-Mac-Shipping.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>libEOSSDK-Mac-Shipping.dylib</Link>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include=".env" />
    <Content Include=".env.example" />
  </ItemGroup>
</Project>
